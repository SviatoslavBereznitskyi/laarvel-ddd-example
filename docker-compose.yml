version: '3'
services:
  web:
    image: nginx:alpine
    volumes:
      - "./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./docker/ssl:/etc/ssl"
      - "./app:/var/www/html"
      - "./docker/nginx/${NGINX_ENV}.template.conf:/etc/nginx/conf.d/default.template"
      - "./docker/certbot/conf:/etc/letsencrypt:cached"
      - "./docker/certbot/www:/var/www/certbot"
      - "./docker/certbot/cert:/etc/letsencrypt/live"
      - "./docker/letsencrypt/logs:/var/log/letsencrypt"
    ports:
      - "${NGINX_HTTP_PORT}:80"
      - "${NGINX_HTTPS_PORT}:443"
    environment:
      - NGINX_HOST=${NGINX_HOST}
    command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    restart: always
    depends_on:
      - php
      - mysqldb
  php:
    #    build:
    #      context: ./docker/php
    image: nanoninja/php-fpm:${PHP_VERSION}
    restart: always
    volumes:
      - "./docker/php/php.ini:/usr/local/etc/php/php.ini"
      - "./app:/var/www/html"
  composer:
    image: "composer"
    volumes:
      - "./app:/var/www/html"
    command: install --ignore-platform-reqs
  mysqldb:
    image: mysql:${MYSQL_VERSION}
    restart: always
    env_file:
      - "./.env"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    command: ["--default-authentication-plugin=mysql_native_password"]
    ports:
      - "${MYSQL_HTTP_PORT}:3306"
    volumes:
      - "./app/storage/db/mysql:/var/lib/mysql"
  node:
    image: node:11.9.0
    restart: on-failure
    volumes:
      - ./app:/app:rw
    working_dir: /app
#  echo:
#    build:
#      context: ./docker/websockets
#    labels:
#      - "traefik.enable=true"
#      - "traefik.frontend.rule=Host:echo.${DOMAIN}"
#      - "traefik.port=8009"
#    volumes:
#      - "./docker/websockets:/usr/src/app"
  certbot:
    image: certbot/certbot
    volumes:
      - "./docker/certbot/conf:/etc/letsencrypt:cached"
      - "./docker/certbot/www:/var/www/certbot"
      - "./docker/certbot/cert:/etc/letsencrypt/live"
      - "./app/public:/web-root"
  redis:
    image: redis:5.0-alpine
    volumes:
      - "./docker/redis:/data"
    command:
      - 'redis-server'
      - '--databases 2'
      - '--save 900 1'
      - '--save 300 10'
      - '--save 60 10000'
      - '--requirepass secret'
#  centrifugo:
#    image: centrifugo/centrifugo
#    command: centrifugo -c config.json
#    volumes:
#      - ./docker/centrifugo/conf:/centrifugo
#    ports:
#      - "6553:6553"
  mailer:
    image: mailhog/mailhog
    ports:
      - "8025:8025"